name: Slack Post Deployment Notification Workflow
on: 
   workflow_run: 
     workflows : ['Release Workflow', 'Test Workflow']
     types:
       - completed


jobs:
   
  slack_post_notification:
    runs-on: ubuntu-latest
    name: Notify Slack (Post)
    permissions:
         actions: write
         contents: read
    steps:   
        - name : Github Checkout Repository
          uses : actions/checkout@v3
          with : 
             fetch-depth : 0
             ref : ${{github.sha}}

        - name: Get Branch Name
          id: branch_name
          run: echo "::set-output name=branch::${{github.event.workflow_run.head_branch}}"   

        - name : Check if version.json file exists
          id: check_file
          uses : andstor/file-existence-action@v2
          with : 
             files : "version.json"

        - name : Read version.json
          id : json_file
          if : steps.check_file.outputs.files_exists == 'true'
          uses : juliangruber/read-file-action@v1
          with : 
              path : version.json
              
        - name: Download Artifacts
          id: download_slack_artifacts
          uses: dawidd6/action-download-artifact@v2
          with: 
             github_token: ${{github.token}}
             workflow: slack-pre-notification.workflow.yml
             workflow_conclusion: success
             name: slack-artifact

        - name : Check if Slack JSON exists
          id: check_slack_json_file
          uses : andstor/file-existence-action@v2
          with : 
             files : "slack.json"     


        - name : Read Slack JSON
          if : steps.check_slack_json_file.outputs.files_exists == 'true'
          id : slack_json
          uses : juliangruber/read-file-action@v1
          with : 
              path : slack.json     

        - name : Request Workflow Jobs
          if: ${{github.event.workflow_run.conclusion == 'failure'}}
          id : request_jobs
          run : |
              response=$(curl -s \
                  -X GET \
                  -H "Accept: application/vnd.github+json" \
                  -H "Authorization: Bearer ${{github.token}}"\
                  ${{github.event.workflow_run.jobs_url}} | jq -r '.jobs' | jq -c .)
                  
                echo "::set-output name=response::$response"

        # - name : Request Logs
        #   if: ${{github.event.workflow_run.conclusion == 'failure'}}
        #   id : request_logs
        #   run : |
        #     logs=$(curl -L \
        #           -X GET \
        #           -H "Accept: application/vnd.github+json" \
        #           -H "Authorization: Bearer ${{github.token}}"\
        #           ${{github.event.workflow_run.logs_url}} | jq -R '.') 

        #         echo "::set-output name=logs::$logs"

        # - name: Save Logs
        #   if: ${{github.event.workflow_run.conclusion == 'failure'}}
        #   uses: actions/upload-artifact@v3
        #   with: 
        #       name : logs
        #       path : logs.txt

        - name: Get Failed Job
          id: failed_job
          if: ${{github.event.workflow_run.conclusion == 'failure'}}
          run : |
                node -e '
                let failed_job = {
                  link : "",
                  step : ""
                }
                const jobs = JSON.parse(process.env.JOBS_API_RESPONSE);
                for(let {status,conclusion,html_url,steps} of jobs) {
                  if(status === "completed" && conclusion === "failure") {
                    failed_job.link = html_url;
                  };
                  if(steps.length > 0) {
                    for(let step of steps) {
                      if(step.conclusion === "failure") {
                        failed_job.step = step.name;
                      }
                    }
                  }
                }
                process.stdout.write(`::set-output name=failed_job::${JSON.stringify(failed_job)}`);
                '
          env:
              JOBS_API_RESPONSE: ${{steps.request_jobs.outputs.response}}        
                

        - name : Send Slack Notification (Success) 
          if : ${{ true}}
          env : 
             SLACK_BOT_TOKEN : ${{secrets.SLACK_BOT_TOKEN}}
          uses : slackapi/slack-github-action@v1.24.0
          with : 
               channel-id : 'C058W67M0SC' # ID of Slack Channel
               update-ts : ${{fromJSON(steps.slack_json.outputs.content).ts}}
               payload : |
                        {
                          "text" : "Hey <!subteam^S014W2U4MPY>",
                          "attachments" : [
                            {
                              "pretext": "*_WebApp ${{ fromJSON(steps.json_file.outputs.content).monorepo }}_* is deployed successfully! :rocket: :tada:",
                              "color": "28a745",
                              "fields": [
                                    {
                                      "title": "Deployment",
                                      "short": true,
                                      "value": "Success"
                                    },
                                    {
                                      "type" : "divider"
                                    },
                                     {
                                      "title": "Build Version",
                                      "short": true,
                                      "value": "${{ fromJSON(steps.json_file.outputs.content).monorepo }}"
                                    },
                                    {
                                      "type" : "divider"
                                    },

                                      {
                                      "title": "Repository",
                                      "short": true,
                                      "value": "${{github.repository}}"
                                    },
                                    {
                                      "type" : "divider"
                                    },
                                  
                                    {
                                      "title" : "Branch",
                                      "short" : true,
                                      "value" : "${{steps.branch_name.outputs.branch}}"
                                    },
                                    {
                                      "type" : "divider"
                                    },
                                    
                                    {
                                      "title": "Commit URL",
                                      "short": true,
                                      "value": "https://github.com/${{github.repository}}/commit/${{github.sha}}"
                                    }

                              ]
                            }
                          ]
                        }

        - name : Send Slack Notification (Failure)
          if : ${{github.event.workflow_run.conclusion == 'failure'}}
          uses : slackapi/slack-github-action@v1.24.0
          env :
             SLACK_BOT_TOKEN : ${{secrets.SLACK_BOT_TOKEN}}
          with : 
               channel-id : 'C058W67M0SC' # ID of Slack Channel
               update-ts : ${{fromJSON(steps.slack_json.outputs.content).ts}}
               payload : |
                        {
                          "text" : "Hey <!subteam^S014W2U4MPY>",
                          "attachments" : [
                              {
                            "pretext": "",
                            "color": "FF0000",
                            "fields": [
                                {
                                  "title": "Deployment",
                                  "short": true,
                                  "value": "Failed"
                                },
                                {
                                  "type" : "divider"
                                },
                                {
                                      "title": "Build Version",
                                      "short": true,
                                      "value": "${{ fromJSON(steps.json_file.outputs.content).monorepo }}"
                                 },
                                 {
                                      "type" : "divider"
                                },
                                {
                                  "title": "Repository",
                                  "short": true,
                                  "value": "${{github.repository}}"
                                },
                                {
                                  "type" : "divider"
                                },
                                {
                                  "title" : "Branch",
                                  "short" : true,
                                  "value" : "${{steps.branch_name.outputs.branch}}"
                                },
                                {
                                  "type" : "divider"
                                },
                                {
                                  "title" : "Failed Step",
                                  "short" : true,
                                  "value" : "${{fromJSON(steps.failed_job.outputs.failed_job).step}}"
                                },
                                  {
                                  "type" : "divider"
                                },
                                {
                                  "title": "Failed Job URL",
                                  "short": true,
                                  "value": "${{fromJSON(steps.failed_job.outputs.failed_job).link}}"
                                },
                                {
                                  "type" : "divider"
                                },
                                {
                                      "title": "Commit URL",
                                      "short": true,
                                      "value": "https://github.com/${{github.repository}}/commit/${{github.sha}}"
                                    }
                            ]
                           }
                          ]
                        }
