name : Slack Notification Workflow
on: 
   workflow_run: 
     workflows : ['Release Workflow']
     types:
       - completed

jobs:

  slack_notification:
    runs-on: ubuntu-latest
    name: Post Slack Notification
    permissions:
         actions : read
    steps:   
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Check if version.json file exists
      id: check-file
      uses : andstor/file-existence-action@v2
      with:
          files: "version.json"
          
    - name: Read version.json
      id: version
      if: steps.check-file.outputs.files_exists == 'true'
      uses: juliangruber/read-file-action@v1
      with:
        path: version.json
        
    - name : Jobs API
      if: ${{github.event.workflow_run.conclusion == 'failure'}}
      id : jobs_api
      run : |
           response=$(curl -s \
              -X GET \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{github.token}}"\
              ${{github.event.workflow_run.jobs_url}} | jq -r '.jobs' | jq -c .)
              
            echo "::set-output name=response::$response"
            
    - name : Reponse
      id : failed_link
      if: ${{github.event.workflow_run.conclusion == 'failure'}}
      run : |
            node -e '
            let failed_job_link;
            const jobs = JSON.parse(process.env.JOBS_API_RESPONSE);
            for(let {status,conclusion,html_url} of jobs) {
              if(status === "completed" && conclusion === "failure") {
                failed_job_link = html_url;
              }
            }
            process.stdout.write(`::set-output name=failed_job_link::${failed_job_link}`)
            '
      env:
          JOBS_API_RESPONSE: ${{ steps.jobs_api.outputs.response }}
      
    - name : Print
      run : echo "---Failed Link--- ${{github.sha}}"
          
    - name: Send Slack Success Notification
      if: ${{github.event.workflow_run.conclusion == 'success'}}
      env:
        SLACK_BOT_TOKEN: ${{secrets.SLACK_BOT_TOKEN}}
      uses: slackapi/slack-github-action@v1.23.0
      with:
        channel-id: 'C058W67M0SC' # ID of Slack Channel you want to post to
        payload: | 
                 {
                   "text": "Hey <!subteam^S014W2U4MPY>",
                   "attachments": [
                      {
                        "pretext": "*_WebApp ${{ fromJSON(steps.version.outputs.content).monorepo }}_* is in Staging! :rocket: :tada:",
                        "color": "28a745",
                        "fields": [
                          {
                            "title": "Deployment",
                            "short": true,
                            "value": "SUCCESS"
                          },
                          {
                             "type": "divider"
                           },
                          {
                            "title": "Last Commit URL",
                            "short": true,
                            "value": "https://github.com/${{github.repository}}/commit/${{github.sha}}"
                          },
                          {
                             "type": "divider"
                           },
                           {
                             "title": "Repository",
                             "short": true,
                             "value": "${{github.repository}}"
                           }
                        ]
                      }
                     ]
                  }
                  
    - name: Send Slack Failure Notification
      if: ${{github.event.workflow_run.conclusion == 'failure'}}
      env:
        SLACK_BOT_TOKEN: ${{secrets.SLACK_BOT_TOKEN}}
      uses: slackapi/slack-github-action@v1.23.0
      with:
         channel-id: 'C058W67M0SC' # ID of Slack Channel you want to post to
         payload: |
                  {
                    "text": "Hey <!subteam^S014W2U4MPY>",
                    "attachments" : [
                      {
                        "pretext": "",
                        "color": "FF0000",
                        "fields": [
                          {
                            "title": "Deployment",
                            "short": true,
                            "value": "FAILED"
                          },
                          {
                             "type": "divider"
                           },
                           {
                             "title": "Repository",
                             "short": true,
                             "value": "${{github.repository}}"
                           },
                           {
                             "type": "divider"
                           },
                           {
                             "title": "Failed Job URL",
                             "short": true,
                             "value": "${{steps.failed_link.outputs.failed_job_link}}"
                           },
                            {
                             "type": "divider"
                           },
                           {
                             "title" : "Branch",
                             "short" : true,
                             "value" : "${{ github.ref/refs\/heads\//}}"
                           }
                        ]
                      }
                    ]
                  }
